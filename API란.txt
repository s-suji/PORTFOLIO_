윈도우에서 특정 언어에 자기 운영체제를 조작할 수 있게
만들어주는 함수들의 집합 개념

윈도우 API(Windows API, WinAPI)는 마이크로소프트 윈도우 
운영 체제들이 사용하는 API이다. C/C++ 프로그램에서 직접 
운영 체제와 상호 작용할 수 있도록 만들어졌으며, 그보다 더 
낮은 수준의 제어는 Ntdll.dll을 사용한 낮은 수준의 DLL로 
가능하다.

API(Application Programming Interface 애플리케이션 
프로그래밍 인터페이스[*], 응용 프로그램 프로그래밍 
인터페이스)는 컴퓨터나 컴퓨터 프로그램 사이의 연결이다. 
일종의 소프트웨어 인터페이스이며 다른 종류의 소프트웨어에 
서비스를 제공한다.[1] 이러한 연결이나 인터페이스를 빌드하거나 
사용하는 방법을 기술하는 문서나 표준은 API 사양으로 부른다. 
이 표준을 충족하는 컴퓨터 시스템은 API가 
구현(implement)되었다거나 노출(expose)되었다고 말한다. 
API라는 용어는 사양이나 구현체를 의미할 수 있다.

컴퓨터와 인간을 연결시키는 사용자 인터페이스와 반대로, 
API는 컴퓨터나 소프트웨어를 서로 연결한다. 직접 사람(최종 
사용자)에 의해 사용되도록 고안된 것이 아니며, 대신 
소프트웨어에 이를 통합하고자 하는 컴퓨터 프로그래머가 
사용하도록 고안되었다. API는 각기 다른 부분으로 구성
되기도 하며 프로그래머가 사용할 수 있는 도구나 서비스의 
역할을 한다. 이러한 부분들 중 하나를 사용하는 프로그램이나
 프로그래머는 API의 해당 부분을 호출(call)한다고 말한다. 
API를 구성하는 호출들은 서브루틴, 메소드(method), 요청, 
통신 엔드포인트라고도 부른다. API 사양은 이 호출들을 
정의하며, 다시 말해 이들을 어떻게 사용하거나 구현하는지를 
설명한다는 것을 의미한다.

API의 한 가지 목적은 시스템이 동작하는 방식에 관한 내부의 
세세한 부분을 숨기는 것으로, 내부의 세세한 부분이 나중에 
변경되더라도 프로그래머가 유용하게 사용할 수 있고 일정하게 
관리할 수 있는 부분들만 노출시킨다. API는 특정 시스템용으로
 커스텀하게 빌드될 수도 있고, 아니면 수많은 시스템 간 
상호운용성을 허용하는, 공유가 되는 표준일 수도 있다.

API라는 용어는 웹 API를 의미하기도 하며,[2] 이는 인터넷에 
의해 병합된 컴퓨터들 간 통신을 허용한다. 프로그래밍 언어, 
소프트웨어 라이브러리, 컴퓨터 운영 체제, 컴퓨터 하드웨어를 
위한 API도 존재한다. API는 1940년대에 기원하였으나 이 
용어는 1960년대, 70년대 들어서야 모습을 드러냈다.

마소 => 일반 프로그래머 => 일반인
C           C++                     ????
C++       C#                       ????


API는 언어를 말하는게 아니다 C++이런 것
API가 언어를 지원해 줘야 한다.
EX) 윈도우에서 어떠한 새로운 기능을 만들었다.
     그런데 자기들만 사용할수 없는 기능이라
     다른 프로그래머에게 공유해야 한다.
     그래서 C++을 통해서 그 기능을 쓸수있게 만들어줬다.
     만약 마소가 C++로 이 기능을 사용할수 없게 만들었다면
     우리는 못쓴다.

     C++로 사용하는 법을 우리에게 공개하지 않는 일이 많아졌고
     C#으로 사용하는 법만 많이 공개하고 있습니다.

WINAPI가 C++을 지원해주기 때문에 우리는 C++로 WINDOW에 접근할수 있는 겁니다.

선생님의 API에 대한 정의.
N에 간섭하기 위한 모든 함수 및 클래스 코딩적인 구현 모든 것

여기까지 는 개념이었고
선생님의 인터페이스에 대한 정의
N에 간섭하기 위한 모든 함수 및 클래스 자체
WindowCreate

UI에 대한 선생님의 정의
게임 : 일반 사용자가 우리 게임을 사용하고 조작할 수 있게 하는 모든 
키와 이미지 등등등....
WINAPI의 입장에서는 UI가 뭐죠?
WINAPI : 프로그래머가 WINDOW를 사용할수 있고 조작할수 있게 하는 모든
N언어에 대한 함수 변수 헤더 등등등.
C
C++
C#





